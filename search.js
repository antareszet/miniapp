// URL –≤–∞—à–µ–≥–æ –±—ç–∫–µ–Ω–¥-API
const API_URL = "https://YOUR_BACKEND/api/search";  // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π

document.addEventListener('DOMContentLoaded', () => {
  const tg = window.Telegram?.WebApp;
  if (tg) { tg.ready(); tg.expand(); }

  const form = document.getElementById('searchForm');
  form.addEventListener('submit', searchUsers);
});

function getSelectedOptions(el) {
  return Array.from(el.selectedOptions).map(opt => opt.value).filter(Boolean);
}

async function searchUsers(event) {
  event.preventDefault();
  const sphere = document.getElementById('sphere').value;
  const interests = getSelectedOptions(document.getElementById('interests'));
  const gender = document.getElementById('gender').value;
  const age_from = parseInt(document.getElementById('age_from').value) || null;
  const age_to = parseInt(document.getElementById('age_to').value) || null;

  const tgId = window.Telegram?.WebApp?.initDataUnsafe?.user?.id;

  document.getElementById('results').innerHTML = "‚è≥ –ü–æ–∏—Å–∫...";

  try {
    const res = await fetch(API_URL + "?" + new URLSearchParams({
      sphere, gender, age_from, age_to,
      interests: interests.join(","),
      except_id: tgId  // —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è
    }), {
      method: "GET"
    });
    const users = await res.json();
    if (!users.length) {
      document.getElementById('results').innerHTML = '<div class="not-found">–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏–∫—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω.</div>';
      return;
    }
    let html = "";
    for (const user of users) {
      let userInterests = user.interests ? user.interests.split(',').map(x => x.trim()) : [];
      // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –æ–±—â–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ (—Ñ–∏–ª—å—Ç—Ä)
      let matched = interests.length
        ? userInterests.filter(i => interests.includes(i))
        : [];
      html += `<div class="result">
        <div class="card-title">${user.first_name} ${user.last_name}, ${user.age} (${user.gender === "male" ? "–ú" : (user.gender === "female" ? "–ñ" : "-")})</div>
        <div><b>–°—Ñ–µ—Ä–∞:</b> ${user.sphere}</div>
        <div class="chips"><b>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</b> ${
          userInterests.map(i => `<span class="chip${matched.includes(i)?' highlight':''}">${i}</span>`).join(" ")
        }</div>
      </div>`;
    }
    document.getElementById('results').innerHTML = html;
  } catch (err) {
    document.getElementById('results').innerHTML = "üö´ –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.";
  }
}
