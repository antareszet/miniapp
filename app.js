// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
function initTelegramWebApp() {
    console.log("‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp...");
    
    if (window.Telegram && window.Telegram.WebApp) {
        console.log("‚úÖ Telegram.WebApp –¥–æ—Å—Ç—É–ø–µ–Ω");
        console.log("–í–µ—Ä—Å–∏—è WebApp:", Telegram.WebApp.version);
        console.log("–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:", Telegram.WebApp.platform);
        console.log("InitData:", Telegram.WebApp.initData);
        
        Telegram.WebApp.ready();
        Telegram.WebApp.expand();
        Telegram.WebApp.enableClosingConfirmation();
        Telegram.WebApp.setHeaderColor('#6a5acd');
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        Telegram.WebApp.onEvent('viewportChanged', function() {
            console.log('Viewport changed:', Telegram.WebApp.viewportHeight);
        });
        
        Telegram.WebApp.onEvent('themeChanged', function() {
            console.log('Theme changed:', Telegram.WebApp.themeParams);
            applyTheme();
        });
        
        applyTheme();
        return true;
    } else {
        console.log("‚ùå Telegram.WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω");
        return false;
    }
}

// –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É Telegram
function applyTheme() {
    if (!Telegram.WebApp) return;
    
    const themeParams = Telegram.WebApp.themeParams || {};
    document.body.style.backgroundColor = themeParams.bg_color || '#f0f4ff';
    document.body.style.color = themeParams.text_color || '#000000';
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é WebApp –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
let webAppReady = initTelegramWebApp();
if (!webAppReady) {
    setTimeout(() => {
        webAppReady = initTelegramWebApp();
        if (!webAppReady) {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞");
        }
    }, 1000);
}

// –®–∞–≥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
let currentStep = 1;
const totalSteps = 3;
const progress = document.getElementById('progress');
const prevBtn = document.getElementById('prevBtn');
const nextBtn = document.getElementById('nextBtn');

// –ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
document.getElementById('startBtn').addEventListener('click', () => {
    console.log("üü¢ –ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
    document.getElementById('startScreen').style.display = 'none';
    prevBtn.style.display = 'none';
    nextBtn.style.display = 'inline-block';
    showStep(currentStep);
});

// –ù–∞–≤–∏–≥–∞—Ü–∏—è
prevBtn.addEventListener('click', prevStep);
nextBtn.addEventListener('click', nextStep);

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —à–∞–≥–∞
function showStep(step) {
    document.querySelectorAll('.step').forEach(el => el.classList.remove('active'));
    const activeStep = document.getElementById(`step${step}`);
    if (!activeStep) {
        console.warn(`‚ö†Ô∏è –®–∞–≥ step${step} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        return;
    }
    activeStep.classList.add('active');
    progress.style.width = `${((step - 1) / (totalSteps - 1)) * 100}%`;
    prevBtn.style.display = (step === 1) ? 'none' : 'inline-block';
    nextBtn.textContent = (step === totalSteps) ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å' : '–î–∞–ª–µ–µ';
    
    // –ù–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —à–∞–≥–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º MainButton
    if (step === totalSteps && Telegram.WebApp && Telegram.WebApp.MainButton) {
        setupMainButton();
    }
    
    console.log(`üìå –¢–µ–∫—É—â–∏–π —à–∞–≥: ${step}`);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MainButton Telegram
function setupMainButton() {
    const mainButton = Telegram.WebApp.MainButton;
    mainButton.setText('–ó–ê–í–ï–†–®–ò–¢–¨ –†–ï–ì–ò–°–¢–†–ê–¶–ò–Æ');
    mainButton.onClick(submitForm);
    mainButton.show();
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —à–∞–≥–∞
function validateStep(step) {
    let valid = true;
    const inputs = document.getElementById(`step${step}`).querySelectorAll('input, select, textarea');
    
    inputs.forEach(input => {
        if (!input.value.trim()) {
            input.classList.add('error');
            valid = false;
        } else {
            input.classList.remove('error');
        }
        
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞
        if (input.id === 'age' && input.value) {
            const age = parseInt(input.value);
            if (age < 18 || age > 100) {
                input.classList.add('error');
                valid = false;
            }
        }
    });
    
    console.log(`‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —à–∞–≥–∞ ${step}: ${valid ? "—É—Å–ø–µ—à–Ω–æ" : "–æ—à–∏–±–∫–∞"}`);
    return valid;
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è
function nextStep() {
    console.log(`‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Å ${currentStep}`);
    if (validateStep(currentStep)) {
        currentStep++;
        if (currentStep > totalSteps) {
            submitForm();
            return;
        }
        showStep(currentStep);
    } else {
        console.warn("‚ö†Ô∏è –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞");
        showError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ!");
    }
}

function prevStep() {
    console.log(`‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É —Å ${currentStep}`);
    if (currentStep > 1) {
        currentStep--;
        showStep(currentStep);
    }
}

// –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
function showError(message) {
    if (Telegram.WebApp && Telegram.WebApp.showAlert) {
        Telegram.WebApp.showAlert(message);
    } else {
        alert(message);
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
function submitForm() {
    console.log("üì§ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã...");
    
    const data = {
        firstName: document.getElementById('firstName').value.trim(),
        lastName: document.getElementById('lastName').value.trim(),
        gender: document.getElementById('gender').value,
        age: document.getElementById('age').value.trim(),
        sphere: document.getElementById('sphere').value.trim(),
        interests: document.getElementById('interests').value.trim(),
        initData: Telegram.WebApp ? Telegram.WebApp.initData : null
    };

    console.log("üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", data);

    // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
    try {
        if (window.Telegram && window.Telegram.WebApp) {
            // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥
            if (typeof Telegram.WebApp.sendData === 'function') {
                Telegram.WebApp.sendData(JSON.stringify(data));
                console.log("–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ sendData");
            } 
            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
            else if (typeof Telegram.WebApp.postEvent === 'function') {
                Telegram.WebApp.postEvent('web_app_data_send', {data: JSON.stringify(data)});
                console.log("–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ postEvent");
            }
            
            Telegram.WebApp.close();
            return;
        }
        
        // –ú–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π Telegram
        if (window.TelegramGameProxy && window.TelegramGameProxy.receiveEvent) {
            window.TelegramGameProxy.receiveEvent('data', JSON.stringify(data));
            console.log("–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ TelegramGameProxy");
            if (window.Telegram && window.Telegram.WebApp) {
                Telegram.WebApp.close();
            }
            return;
        }
        
        // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ
        showError("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
        console.error("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–µ—Ç–æ–¥–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
        
    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:", e);
        showError("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
}
